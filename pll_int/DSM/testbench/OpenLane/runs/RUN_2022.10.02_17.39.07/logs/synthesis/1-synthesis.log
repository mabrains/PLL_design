
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.21 (git sha1 e6d2a900a, gcc 11.2.0-19ubuntu1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Adder.v
Parsing SystemVerilog input from `/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Adder.v' to AST representation.
Generating RTLIL representation for module `\adder'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM_Full.v
Parsing SystemVerilog input from `/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM_Full.v' to AST representation.
Generating RTLIL representation for module `\DSM_Full'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v
Parsing SystemVerilog input from `/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v' to AST representation.
Generating RTLIL representation for module `\accum'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v
Parsing SystemVerilog input from `/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v' to AST representation.
Generating RTLIL representation for module `\DSM'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v
Parsing SystemVerilog input from `/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v' to AST representation.
Generating RTLIL representation for module `\spec_adder'.
Successfully finished Verilog frontend.

6. Generating Graphviz representation of design.
Writing dot description to `/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/runs/RUN_2022.10.02_17.39.07/tmp/synthesis/hierarchy.dot'.
Dumping module DSM to page 1.
Warning: WIDTHLABEL \Cout3 [0] 1
Warning: WIDTHLABEL \Cout2 [0] 1
Warning: WIDTHLABEL \Cout1 [0] 1

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \DSM
Used module:     \spec_adder
Used module:     \accum

7.2. Analyzing design hierarchy..
Top module:  \DSM
Used module:     \spec_adder
Used module:     \accum
Removing unused module `\DSM_Full'.
Removing unused module `\adder'.
Removed 2 unused modules.
Warning: Resizing cell port DSM.d3.Out_Data from 24 bits to 7 bits.
Warning: Resizing cell port DSM.d3.In_Data from 24 bits to 7 bits.
Warning: Resizing cell port DSM.d2.Out_Data from 24 bits to 7 bits.
Warning: Resizing cell port DSM.d2.In_Data from 24 bits to 7 bits.
Warning: Resizing cell port DSM.d1.Out_Data from 24 bits to 7 bits.
Warning: Resizing cell port DSM.d1.In_Data from 24 bits to 7 bits.

8. Executing TRIBUF pass.

9. Executing SYNTH pass.

9.1. Executing HIERARCHY pass (managing design hierarchy).

9.1.1. Analyzing design hierarchy..
Top module:  \DSM
Used module:     \spec_adder
Used module:     \accum

9.1.2. Analyzing design hierarchy..
Top module:  \DSM
Used module:     \spec_adder
Used module:     \accum
Removed 0 unused modules.

9.2. Executing PROC pass (convert processes to netlists).

9.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:16$3 in module accum.
Marked 1 switch rules as full_case in process $proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:30$8 in module DSM.
Marked 1 switch rules as full_case in process $proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:22$6 in module DSM.
Removed a total of 0 dead cases.

9.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 0 assignments to connections.

9.2.4. Executing PROC_INIT pass (extract init attributes).

9.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\accum.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:16$3'.
Found async reset \reset in `\DSM.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:30$8'.
Found async reset \reset in `\DSM.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:22$6'.

9.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

9.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\accum.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:16$3'.
     1/1: $0\Temp[6:0]
Creating decoders for process `\DSM.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:30$8'.
     1/1: $0\DCout32[4:0]
Creating decoders for process `\DSM.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:22$6'.
     1/1: $0\DCout3[4:0]

9.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

9.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\accum.\Temp' using process `\accum.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:16$3'.
  created $adff cell `$procdff$12' with positive edge clock and negative level reset.
Creating register for signal `\DSM.\DCout32' using process `\DSM.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:30$8'.
  created $adff cell `$procdff$13' with positive edge clock and negative level reset.
Creating register for signal `\DSM.\DCout3' using process `\DSM.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:22$6'.
  created $adff cell `$procdff$14' with positive edge clock and negative level reset.

9.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

9.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `accum.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:16$3'.
Removing empty process `DSM.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:30$8'.
Removing empty process `DSM.$proc$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/DSM.v:22$6'.
Cleaned up 0 empty switches.

9.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module accum.
Optimizing module spec_adder.
Optimizing module DSM.

9.3. Executing FLATTEN pass (flatten design).
Deleting now unused module accum.
Deleting now unused module spec_adder.
<suppressed ~5 debug messages>

9.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..
Removed 5 unused cells and 15 unused wires.
<suppressed ~6 debug messages>

9.6. Executing CHECK pass (checking for obvious problems).
Checking module DSM...
Found and reported 0 problems.

9.7. Executing OPT pass (performing simple optimizations).

9.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DSM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DSM.
Performed a total of 0 changes.

9.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 1 on $procdff$14 ($adff) from module DSM.
Setting constant 0-bit at position 2 on $procdff$14 ($adff) from module DSM.
Setting constant 0-bit at position 3 on $procdff$14 ($adff) from module DSM.
Setting constant 0-bit at position 4 on $procdff$14 ($adff) from module DSM.

9.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.7.9. Rerunning OPT passes. (Maybe there is more to do..)

9.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DSM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DSM.
Performed a total of 0 changes.

9.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.7.13. Executing OPT_DFF pass (perform DFF optimizations).

9.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.7.16. Finished OPT passes. (There is nothing left to do.)

9.8. Executing FSM pass (extract and optimize FSM).

9.8.1. Executing FSM_DETECT pass (finding FSMs in design).

9.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).

9.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).

9.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).

9.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

9.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

9.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

9.9. Executing OPT pass (performing simple optimizations).

9.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DSM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DSM.
Performed a total of 0 changes.

9.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.9.6. Executing OPT_DFF pass (perform DFF optimizations).

9.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.9.9. Finished OPT passes. (There is nothing left to do.)

9.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell DSM.$flatten\u4.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11 ($sub).
Removed top 1 bits (of 6) from port Y of cell DSM.$flatten\u4.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11 ($sub).
Removed top 1 bits (of 6) from port A of cell DSM.$flatten\u4.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11 ($sub).
Removed top 4 bits (of 5) from port A of cell DSM.$flatten\u4.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10 ($add).
Removed top 4 bits (of 5) from port B of cell DSM.$flatten\u4.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10 ($add).
Removed top 4 bits (of 6) from port Y of cell DSM.$flatten\u4.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10 ($add).
Removed top 1 bits (of 6) from port Y of cell DSM.$flatten\u5.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11 ($sub).
Removed top 1 bits (of 6) from port A of cell DSM.$flatten\u5.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11 ($sub).
Removed top 4 bits (of 5) from port A of cell DSM.$flatten\u5.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10 ($add).
Removed top 1 bits (of 6) from port Y of cell DSM.$flatten\u5.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10 ($add).
Removed top 4 bits (of 6) from wire DSM.$flatten\u4.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10_Y.
Removed top 1 bits (of 6) from wire DSM.$flatten\u5.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10_Y.
Removed top 4 bits (of 5) from wire DSM.DCout3.
Removed top 18 bits (of 24) from wire DSM.Sum3.

9.11. Executing PEEPOPT pass (run peephole optimizers).

9.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

9.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module DSM:
  creating $macc model for $flatten\d1.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5 ($add).
  creating $macc model for $flatten\d2.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5 ($add).
  creating $macc model for $flatten\d3.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5 ($add).
  creating $macc model for $flatten\u4.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10 ($add).
  creating $macc model for $flatten\u4.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11 ($sub).
  creating $macc model for $flatten\u5.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10 ($add).
  creating $macc model for $flatten\u5.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11 ($sub).
  merging $macc model for $flatten\u5.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10 into $flatten\u5.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11.
  creating $alu model for $macc $flatten\u4.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11.
  creating $alu model for $macc $flatten\u4.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10.
  creating $alu model for $macc $flatten\d3.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5.
  creating $alu model for $macc $flatten\d2.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5.
  creating $alu model for $macc $flatten\d1.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5.
  creating $macc cell for $flatten\u5.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11: $auto$alumacc.cc:365:replace_macc$20
  creating $alu cell for $flatten\d1.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5: $auto$alumacc.cc:485:replace_alu$21
  creating $alu cell for $flatten\d2.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5: $auto$alumacc.cc:485:replace_alu$24
  creating $alu cell for $flatten\d3.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Accumulator.v:22$5: $auto$alumacc.cc:485:replace_alu$27
  creating $alu cell for $flatten\u4.$add$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$10: $auto$alumacc.cc:485:replace_alu$30
  creating $alu cell for $flatten\u4.$sub$/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/src/Special_Adder.v:10$11: $auto$alumacc.cc:485:replace_alu$33
  created 5 $alu and 1 $macc cells.

9.14. Executing SHARE pass (SAT-based resource sharing).

9.15. Executing OPT pass (performing simple optimizations).

9.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DSM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DSM.
Performed a total of 0 changes.

9.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.15.6. Executing OPT_DFF pass (perform DFF optimizations).

9.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

9.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.15.9. Rerunning OPT passes. (Maybe there is more to do..)

9.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DSM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DSM.
Performed a total of 0 changes.

9.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.15.13. Executing OPT_DFF pass (perform DFF optimizations).

9.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.15.16. Finished OPT passes. (There is nothing left to do.)

9.16. Executing MEMORY pass.

9.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

9.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

9.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

9.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

9.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

9.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

9.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

9.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).

9.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.18. Executing OPT pass (performing simple optimizations).

9.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.
<suppressed ~2 debug messages>

9.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.18.3. Executing OPT_DFF pass (perform DFF optimizations).

9.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.18.5. Finished fast OPT passes.

9.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

9.20. Executing OPT pass (performing simple optimizations).

9.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DSM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DSM.
Performed a total of 0 changes.

9.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.20.6. Executing OPT_SHARE pass.

9.20.7. Executing OPT_DFF pass (perform DFF optimizations).

9.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

9.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.20.10. Finished OPT passes. (There is nothing left to do.)

9.21. Executing TECHMAP pass (map to technology primitives).

9.21.1. Executing Verilog-2005 frontend: /home/farag/open_design_environment/tools/yosys-yosys-0.21/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/farag/open_design_environment/tools/yosys-yosys-0.21/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$5e422c97d4648c7864402691d7b06fc43e6ffb33\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  sub \DCout32 (5 bits, unsigned)
  add \u4.Out_Data (5 bits, unsigned)
  add bits \u5.Data1 [0] (1 bits)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$1d1e68f77481583066c6d429218f48ea9d5739b3\_90_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000000101 for cells of type $fa.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~669 debug messages>

9.22. Executing OPT pass (performing simple optimizations).

9.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.
<suppressed ~140 debug messages>

9.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

9.22.3. Executing OPT_DFF pass (perform DFF optimizations).

9.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..
Removed 21 unused cells and 198 unused wires.
<suppressed ~22 debug messages>

9.22.5. Finished fast OPT passes.

9.23. Executing ABC pass (technology mapping using ABC).

9.23.1. Extracting gate netlist of module `\DSM' to `<abc-temp-dir>/input.blif'..
Extracted 157 gates and 189 wires to a netlist network with 32 inputs and 30 outputs.

9.23.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

9.23.1.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        3
ABC RESULTS:              NAND cells:       19
ABC RESULTS:              XNOR cells:       21
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:               NOR cells:       12
ABC RESULTS:                OR cells:       10
ABC RESULTS:            ANDNOT cells:       44
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:      127
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       30
Removing temp directory.

9.24. Executing OPT pass (performing simple optimizations).

9.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

9.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

9.24.3. Executing OPT_DFF pass (perform DFF optimizations).

9.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..
Removed 0 unused cells and 128 unused wires.
<suppressed ~1 debug messages>

9.24.5. Finished fast OPT passes.

9.25. Executing HIERARCHY pass (managing design hierarchy).

9.25.1. Analyzing design hierarchy..
Top module:  \DSM

9.25.2. Analyzing design hierarchy..
Top module:  \DSM
Removed 0 unused modules.

9.26. Printing statistics.

=== DSM ===

   Number of wires:                162
   Number of wire bits:            374
   Number of public wires:          44
   Number of public wire bits:     256
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                173
     $_ANDNOT_                      44
     $_AND_                          3
     $_DFF_PN0_                     25
     $_NAND_                        19
     $_NOR_                         12
     $_NOT_                          1
     $_ORNOT_                        7
     $_OR_                          10
     $_XNOR_                        21
     $_XOR_                         31

9.27. Executing CHECK pass (checking for obvious problems).
Checking module DSM...
Found and reported 0 problems.

10. Generating Graphviz representation of design.
Writing dot description to `/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/runs/RUN_2022.10.02_17.39.07/tmp/synthesis/post_techmap.dot'.
Dumping module DSM to page 1.
Warning: WIDTHLABEL \d3.Temp [6] 1
Warning: WIDTHLABEL \d2.Temp [6] 1
Warning: WIDTHLABEL \d3.Temp [6] 1
Warning: WIDTHLABEL \d2.Temp [6] 1
Warning: WIDTHLABEL \d3.Temp [5] 1
Warning: WIDTHLABEL \d2.Temp [5] 1
Warning: WIDTHLABEL \d3.Temp [5] 1
Warning: WIDTHLABEL \d2.Temp [5] 1
Warning: WIDTHLABEL \d3.Temp [4] 1
Warning: WIDTHLABEL \d2.Temp [4] 1
Warning: WIDTHLABEL \d3.Temp [4] 1
Warning: WIDTHLABEL \d2.Temp [4] 1
Warning: WIDTHLABEL \d3.Temp [3] 1
Warning: WIDTHLABEL \d2.Temp [3] 1
Warning: WIDTHLABEL \d3.Temp [3] 1
Warning: WIDTHLABEL \d2.Temp [3] 1
Warning: WIDTHLABEL \d3.Temp [2] 1
Warning: WIDTHLABEL \d2.Temp [2] 1
Warning: WIDTHLABEL \d3.Temp [2] 1
Warning: WIDTHLABEL \d2.Temp [2] 1
Warning: WIDTHLABEL \d3.Temp [1] 1
Warning: WIDTHLABEL \d2.Temp [1] 1
Warning: WIDTHLABEL \d3.Temp [1] 1
Warning: WIDTHLABEL \d2.Temp [1] 1
Warning: WIDTHLABEL \d3.Temp [0] 1
Warning: WIDTHLABEL \d2.Temp [0] 1
Warning: WIDTHLABEL \d2.Temp [6] 1
Warning: WIDTHLABEL \d1.Temp [6] 1
Warning: WIDTHLABEL \d2.Temp [6] 1
Warning: WIDTHLABEL \d1.Temp [6] 1
Warning: WIDTHLABEL \d2.Temp [5] 1
Warning: WIDTHLABEL \d1.Temp [5] 1
Warning: WIDTHLABEL \d2.Temp [5] 1
Warning: WIDTHLABEL \d1.Temp [5] 1
Warning: WIDTHLABEL \d2.Temp [4] 1
Warning: WIDTHLABEL \d1.Temp [4] 1
Warning: WIDTHLABEL \d2.Temp [4] 1
Warning: WIDTHLABEL \d1.Temp [4] 1
Warning: WIDTHLABEL \d2.Temp [3] 1
Warning: WIDTHLABEL \d1.Temp [3] 1
Warning: WIDTHLABEL \d2.Temp [3] 1
Warning: WIDTHLABEL \d1.Temp [3] 1
Warning: WIDTHLABEL \d2.Temp [2] 1
Warning: WIDTHLABEL \d1.Temp [2] 1
Warning: WIDTHLABEL \d2.Temp [2] 1
Warning: WIDTHLABEL \d1.Temp [2] 1
Warning: WIDTHLABEL \d2.Temp [1] 1
Warning: WIDTHLABEL \d1.Temp [1] 1
Warning: WIDTHLABEL \d2.Temp [1] 1
Warning: WIDTHLABEL \d1.Temp [1] 1
Warning: WIDTHLABEL \d2.Temp [0] 1
Warning: WIDTHLABEL \d1.Temp [0] 1
Warning: WIDTHLABEL \u4.Out_Data [3] 1
Warning: WIDTHLABEL \u4.Out_Data [0] 1
Warning: WIDTHLABEL \d2.Sum [1] 1
Warning: WIDTHLABEL \d2.Sum [2] 1
Warning: WIDTHLABEL \d2.Sum [3] 1
Warning: WIDTHLABEL \d2.Sum [4] 1
Warning: WIDTHLABEL \d2.Sum [5] 1
Warning: WIDTHLABEL \d2.Sum [6] 1
Warning: WIDTHLABEL \d2.Temp [0] 1
Warning: WIDTHLABEL \d1.Temp [0] 1
Warning: WIDTHLABEL \d2.Sum [0] 1
Warning: WIDTHLABEL \d3.Sum [1] 1
Warning: WIDTHLABEL \d3.Sum [2] 1
Warning: WIDTHLABEL \d3.Sum [3] 1
Warning: WIDTHLABEL \d3.Sum [4] 1
Warning: WIDTHLABEL \d3.Sum [5] 1
Warning: WIDTHLABEL \d3.Sum [6] 1
Warning: WIDTHLABEL \d3.Temp [0] 1
Warning: WIDTHLABEL \d2.Temp [0] 1
Warning: WIDTHLABEL \d3.Sum [0] 1
Warning: WIDTHLABEL \u4.Out_Data [1] 1
Warning: WIDTHLABEL \In_Data [1] 1
Warning: WIDTHLABEL \d1.Temp [1] 1
Warning: WIDTHLABEL \In_Data [0] 1
Warning: WIDTHLABEL \d1.Temp [0] 1
Warning: WIDTHLABEL \d1.Sum [1] 1
Warning: WIDTHLABEL \In_Data [2] 1
Warning: WIDTHLABEL \d1.Temp [2] 1
Warning: WIDTHLABEL \In_Data [1] 1
Warning: WIDTHLABEL \d1.Temp [1] 1
Warning: WIDTHLABEL \d1.Sum [2] 1
Warning: WIDTHLABEL \In_Data [3] 1
Warning: WIDTHLABEL \d1.Temp [3] 1
Warning: WIDTHLABEL \In_Data [2] 1
Warning: WIDTHLABEL \d1.Temp [2] 1
Warning: WIDTHLABEL \d1.Sum [3] 1
Warning: WIDTHLABEL \In_Data [4] 1
Warning: WIDTHLABEL \d1.Temp [4] 1
Warning: WIDTHLABEL \In_Data [3] 1
Warning: WIDTHLABEL \d1.Temp [3] 1
Warning: WIDTHLABEL \d1.Sum [4] 1
Warning: WIDTHLABEL \In_Data [5] 1
Warning: WIDTHLABEL \d1.Temp [5] 1
Warning: WIDTHLABEL \In_Data [4] 1
Warning: WIDTHLABEL \d1.Temp [4] 1
Warning: WIDTHLABEL \d1.Sum [5] 1
Warning: WIDTHLABEL \In_Data [6] 1
Warning: WIDTHLABEL \d1.Temp [6] 1
Warning: WIDTHLABEL \In_Data [5] 1
Warning: WIDTHLABEL \d1.Temp [5] 1
Warning: WIDTHLABEL \d1.Sum [6] 1
Warning: WIDTHLABEL \In_Data [0] 1
Warning: WIDTHLABEL \d1.Temp [0] 1
Warning: WIDTHLABEL \d1.Sum [0] 1
Warning: WIDTHLABEL \DCout32 [1] 1
Warning: WIDTHLABEL \DCout32 [0] 1
Warning: WIDTHLABEL \u4.Out_Data [0] 1
Warning: WIDTHLABEL \u4.Out_Data [0] 1
Warning: WIDTHLABEL \DCout32 [0] 1
Warning: WIDTHLABEL \In_Data [6] 1
Warning: WIDTHLABEL \d1.Temp [6] 1
Warning: WIDTHLABEL \Out_Data [1] 1
Warning: WIDTHLABEL \u4.Out_Data [3] 1
Warning: WIDTHLABEL \DCout32 [3] 1
Warning: WIDTHLABEL \DCout32 [1] 1
Warning: WIDTHLABEL \Out_Data [2] 1
Warning: WIDTHLABEL \DCout32 [3] 1
Warning: WIDTHLABEL \u4.Out_Data [3] 1
Warning: WIDTHLABEL \Out_Data [3] 1
Warning: WIDTHLABEL \DCout32 [3] 1
Warning: WIDTHLABEL \u4.Out_Data [3] 1
Warning: WIDTHLABEL \Out_Data [4] 1
Warning: WIDTHLABEL \Out_Data [0] 1
Warning: WIDTHLABEL \u4.Out_Data [0] 1
Warning: WIDTHLABEL \DCout32 [0] 1
Warning: WIDTHLABEL \u4.Out_Data [1] 1
Warning: WIDTHLABEL \DCout32 [1] 1
Warning: WIDTHLABEL \u4.Out_Data [3] 1
Warning: WIDTHLABEL \DCout32 [3] 1
Warning: WIDTHLABEL \d1.Sum [0] 1
Warning: WIDTHLABEL \d1.Temp [0] 1
Warning: WIDTHLABEL \d1.Sum [1] 1
Warning: WIDTHLABEL \d1.Temp [1] 1
Warning: WIDTHLABEL \d1.Sum [2] 1
Warning: WIDTHLABEL \d1.Temp [2] 1
Warning: WIDTHLABEL \d1.Sum [3] 1
Warning: WIDTHLABEL \d1.Temp [3] 1
Warning: WIDTHLABEL \d1.Sum [4] 1
Warning: WIDTHLABEL \d1.Temp [4] 1
Warning: WIDTHLABEL \d1.Sum [5] 1
Warning: WIDTHLABEL \d1.Temp [5] 1
Warning: WIDTHLABEL \d1.Sum [6] 1
Warning: WIDTHLABEL \d1.Temp [6] 1
Warning: WIDTHLABEL \d2.Sum [0] 1
Warning: WIDTHLABEL \d2.Temp [0] 1
Warning: WIDTHLABEL \d2.Sum [1] 1
Warning: WIDTHLABEL \d2.Temp [1] 1
Warning: WIDTHLABEL \d2.Sum [2] 1
Warning: WIDTHLABEL \d2.Temp [2] 1
Warning: WIDTHLABEL \d2.Sum [3] 1
Warning: WIDTHLABEL \d2.Temp [3] 1
Warning: WIDTHLABEL \d2.Sum [4] 1
Warning: WIDTHLABEL \d2.Temp [4] 1
Warning: WIDTHLABEL \d2.Sum [5] 1
Warning: WIDTHLABEL \d2.Temp [5] 1
Warning: WIDTHLABEL \d2.Sum [6] 1
Warning: WIDTHLABEL \d2.Temp [6] 1
Warning: WIDTHLABEL \d3.Sum [0] 1
Warning: WIDTHLABEL \d3.Temp [0] 1
Warning: WIDTHLABEL \d3.Sum [1] 1
Warning: WIDTHLABEL \d3.Temp [1] 1
Warning: WIDTHLABEL \d3.Sum [2] 1
Warning: WIDTHLABEL \d3.Temp [2] 1
Warning: WIDTHLABEL \d3.Sum [3] 1
Warning: WIDTHLABEL \d3.Temp [3] 1
Warning: WIDTHLABEL \d3.Sum [4] 1
Warning: WIDTHLABEL \d3.Temp [4] 1
Warning: WIDTHLABEL \d3.Sum [5] 1
Warning: WIDTHLABEL \d3.Temp [5] 1
Warning: WIDTHLABEL \d3.Sum [6] 1
Warning: WIDTHLABEL \d3.Temp [6] 1

11. Executing SHARE pass (SAT-based resource sharing).

12. Executing OPT pass (performing simple optimizations).

12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DSM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DSM.
Performed a total of 0 changes.

12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DSM'.
Removed a total of 0 cells.

12.6. Executing OPT_DFF pass (perform DFF optimizations).

12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..

12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module DSM.

12.9. Finished OPT passes. (There is nothing left to do.)

13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..
Removed 0 unused cells and 30 unused wires.
<suppressed ~30 debug messages>

14. Printing statistics.

=== DSM ===

   Number of wires:                132
   Number of wire bits:            203
   Number of public wires:          14
   Number of public wire bits:      85
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                173
     $_ANDNOT_                      44
     $_AND_                          3
     $_DFF_PN0_                     25
     $_NAND_                        19
     $_NOR_                         12
     $_NOT_                          1
     $_ORNOT_                        7
     $_OR_                          10
     $_XNOR_                        21
     $_XOR_                         31

mapping tbuf

15. Executing TECHMAP pass (map to technology primitives).

15.1. Executing Verilog-2005 frontend: /home/farag/open_design_environment/foundry/pdks/skywaters/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/farag/open_design_environment/foundry/pdks/skywaters/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

15.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

16. Executing SIMPLEMAP pass (map simple cells to gate primitives).

17. Executing TECHMAP pass (map to technology primitives).

17.1. Executing Verilog-2005 frontend: /home/farag/open_design_environment/foundry/pdks/skywaters/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/farag/open_design_environment/foundry/pdks/skywaters/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18. Executing SIMPLEMAP pass (map simple cells to gate primitives).

19. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

19.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\DSM':
  mapped 25 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.

20. Printing statistics.

=== DSM ===

   Number of wires:                132
   Number of wire bits:            203
   Number of public wires:          14
   Number of public wire bits:      85
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                173
     $_ANDNOT_                      44
     $_AND_                          3
     $_NAND_                        19
     $_NOR_                         12
     $_NOT_                          1
     $_ORNOT_                        7
     $_OR_                          10
     $_XNOR_                        21
     $_XOR_                         31
     sky130_fd_sc_hd__dfrtp_2       25

[INFO]: USING STRATEGY AREA 0

21. Executing ABC pass (technology mapping using ABC).

21.1. Extracting gate netlist of module `\DSM' to `/tmp/yosys-abc-duyyin/input.blif'..
Extracted 148 gates and 180 wires to a netlist network with 32 inputs and 30 outputs.

21.1.1. Executing ABC.
Running ABC command: "/home/farag/open_design_environment/tools/yosys-yosys-0.21/bin/yosys-abc" -s -f /tmp/yosys-abc-duyyin/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-duyyin/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-duyyin/input.blif 
ABC: + read_lib -w /home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/runs/RUN_2022.10.02_17.39.07/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.04 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/runs/RUN_2022.10.02_17.39.07/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.05 sec
ABC: Memory =    7.77 MB. Time =     0.05 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/runs/RUN_2022.10.02_17.39.07/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /home/farag/open_design_environment/tools/OpenLane-2022.09.08/designs/DSM/runs/RUN_2022.10.02_17.39.07/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 100000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 100000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 100000 
ABC: Current delay (2801.14 ps) does not exceed the target delay (100000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 100000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    139 (  6.5 %)   Cap = 13.5 ff (  1.2 %)   Area =     1241.19 ( 93.5 %)   Delay =  2841.40 ps  ( 18.7 %)               
ABC: Path  0 --      10 : 0    4 pi                        A =   0.00  Df =  41.6  -23.6 ps  S =  63.3 ps  Cin =  0.0 ff  Cout =  12.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      69 : 2    3 sky130_fd_sc_hd__and2_2   A =   7.51  Df = 224.4   -3.5 ps  S =  89.1 ps  Cin =  1.5 ff  Cout =  14.0 ff  Cmax = 303.0 ff  G =  899  
ABC: Path  2 --      71 : 2    3 sky130_fd_sc_hd__nor2_2   A =   6.26  Df = 440.8 -145.4 ps  S = 222.3 ps  Cin =  4.4 ff  Cout =  18.5 ff  Cmax = 141.9 ff  G =  402  
ABC: Path  3 --      77 : 4    3 sky130_fd_sc_hd__a211oi_2 A =  12.51  Df = 731.1 -168.2 ps  S = 252.1 ps  Cin =  4.4 ff  Cout =   9.8 ff  Cmax =  88.8 ff  G =  209  
ABC: Path  4 --      79 : 5    2 sky130_fd_sc_hd__o311a_2  A =  11.26  Df = 939.8  -20.9 ps  S =  66.1 ps  Cin =  2.4 ff  Cout =   7.2 ff  Cmax = 293.9 ff  G =  287  
ABC: Path  5 --      81 : 4    3 sky130_fd_sc_hd__o31a_2   A =  10.01  Df =1234.0 -143.9 ps  S =  76.8 ps  Cin =  2.3 ff  Cout =  10.9 ff  Cmax = 285.7 ff  G =  449  
ABC: Path  6 --      82 : 1    2 sky130_fd_sc_hd__inv_2    A =   3.75  Df =1411.0 -216.5 ps  S = 197.3 ps  Cin =  4.5 ff  Cout =  42.5 ff  Cmax = 331.4 ff  G =  944  
ABC: Path  7 --     105 : 2    1 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =1619.2 -213.7 ps  S = 165.4 ps  Cin =  8.5 ff  Cout =   8.4 ff  Cmax = 121.8 ff  G =   97  
ABC: Path  8 --     106 : 2    5 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =1919.9 -279.6 ps  S = 351.0 ps  Cin =  8.5 ff  Cout =  24.5 ff  Cmax = 121.8 ff  G =  281  
ABC: Path  9 --     180 : 2    3 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =2173.6 -328.2 ps  S = 190.7 ps  Cin =  8.5 ff  Cout =  10.6 ff  Cmax = 121.8 ff  G =  120  
ABC: Path 10 --     199 : 2    1 sky130_fd_sc_hd__or2_2    A =   6.26  Df =2446.9 -467.4 ps  S =  49.1 ps  Cin =  1.5 ff  Cout =   1.5 ff  Cmax = 299.4 ff  G =  101  
ABC: Path 11 --     200 : 2    1 sky130_fd_sc_hd__and2_2   A =   7.51  Df =2627.3 -219.1 ps  S =  34.8 ps  Cin =  1.5 ff  Cout =   2.2 ff  Cmax = 303.0 ff  G =  143  
ABC: Path 12 --     201 : 1    1 sky130_fd_sc_hd__buf_1    A =   3.75  Df =2841.4 -113.9 ps  S = 396.2 ps  Cin =  2.1 ff  Cout =  33.4 ff  Cmax = 130.0 ff  G = 1590  
ABC: Start-point = pi9 (\d2.Out_Data [2]).  End-point = po29 (\Out_Data [0]).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   32/   30  lat =    0  nd =   139  edge =    315  area =1241.55  delay =12.00  lev = 12
ABC: + write_blif /tmp/yosys-abc-duyyin/output.blif 

21.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        4
ABC RESULTS:        internal signals:      118
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       30
Removing temp directory.

22. Executing SETUNDEF pass (replace undef values with defined constants).

23. Executing HILOMAP pass (mapping to constant drivers).

24. Executing SPLITNETS pass (splitting up multi-bit signals).

25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DSM..
Removed 0 unused cells and 184 unused wires.
<suppressed ~5 debug messages>

26. Executing INSBUF pass (insert buffer cells for connected wires).

27. Executing CHECK pass (checking for obvious problems).
Checking module DSM...
Warning: Wire DSM.\Out_Data [4] is used but has no driver.
Warning: Wire DSM.\Out_Data [3] is used but has no driver.
Warning: Wire DSM.\Out_Data [2] is used but has no driver.
Warning: Wire DSM.\Out_Data [1] is used but has no driver.
Warning: Wire DSM.\Out_Data [0] is used but has no driver.
Found and reported 5 problems.

28. Printing statistics.

=== DSM ===

   Number of wires:                163
   Number of wire bits:            190
   Number of public wires:          54
   Number of public wire bits:      81
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                164
     sky130_fd_sc_hd__a211oi_2       3
     sky130_fd_sc_hd__a21boi_2       1
     sky130_fd_sc_hd__a21o_2         1
     sky130_fd_sc_hd__a21oi_2        3
     sky130_fd_sc_hd__a31oi_2        3
     sky130_fd_sc_hd__and2_2        14
     sky130_fd_sc_hd__and2b_2        3
     sky130_fd_sc_hd__and3_2         1
     sky130_fd_sc_hd__buf_1          4
     sky130_fd_sc_hd__dfrtp_2       25
     sky130_fd_sc_hd__inv_2          5
     sky130_fd_sc_hd__nand2_2       23
     sky130_fd_sc_hd__nand3_2        1
     sky130_fd_sc_hd__nor2_2        25
     sky130_fd_sc_hd__o211a_2        3
     sky130_fd_sc_hd__o211ai_2       1
     sky130_fd_sc_hd__o21ai_2        2
     sky130_fd_sc_hd__o21bai_2       2
     sky130_fd_sc_hd__o311a_2        2
     sky130_fd_sc_hd__o31a_2         4
     sky130_fd_sc_hd__or2_2         11
     sky130_fd_sc_hd__or2b_2         1
     sky130_fd_sc_hd__or3_2          1
     sky130_fd_sc_hd__xnor2_2       20
     sky130_fd_sc_hd__xor2_2         5

   Chip area for module '\DSM': 1898.070400

29. Executing Verilog backend.

29.1. Executing BMUXMAP pass.

29.2. Executing DEMUXMAP pass.
Dumping module `\DSM'.

Warnings: 74 unique messages, 187 total
End of script. Logfile hash: e76fd7c8f5, CPU: user 0.22s system 0.02s, MEM: 28.25 MB peak
Yosys 0.21 (git sha1 e6d2a900a, gcc 11.2.0-19ubuntu1 -fPIC -Os)
Time spent: 50% 2x abc (0 sec), 11% 4x stat (0 sec), ...
